[user]
	email = stanimirdim92@gmail.com
	name = Stanimir Dimitrov
[user]
	email = stan@increate.co.uk
	name = StanimirInc
[commit]
	verbose = true
[gui]
	encoding = utf-8
[status]
	showUntrackedFiles = all
	submoduleSummary = true
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[protocol]
	version = 2
[alias]
    ad = add
	ass = add
	dff = diff
	doff = diff
	emrge = merge
	idff = diff
	mergfe = merge
	mregetool = mergetool
	oull = pull
	pish = push
	pl = pull
	ps = push
	psuh = push
	pu = up
	puhs = push
	puosh = push
	pus = push
	pushy = push
	reabse = rebase
	satsh = stash
	sst = status -sb
	t = status -sb
	tint = init
	tpull = pull
	tpush = push
	ts = status -sb
	tst = status -sb
	tup = up
	fu = push --force-with-lease -u

    ## Shortcuts
	st = status -sb
	s = status -sb
	b = branch -v
	ci = commit --no-verbose
	cia = commit --no-verbose --all
	co = checkout
    ch = change-branch
	cob = checkout -b
	cp = cherry-pick
	l = log
	a = add
	d = df
    # Show the diff between the latest commit and the current state
    di = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
    df = diff --color --color-words --abbrev
	aa = add --all
	aap = add --all -p
	au = add -u
	aua = add -u .
	ap = add -p
	pr = pull-request
	tome = pull
	toyou = push
	cl = clone
	vi = commit
	via = commit --all
	vin = commit --no-verify
	viaa = commit --all --amend
	sui = submodule update --init
	cot = checkout -t
	dc = diff --cached
	standup = log --since yesterday --oneline --author stanimir
	dm = "!git diff | mate"
	dcm = "!git diff --cached | mate"
	x = "!gitx"
	git = "!exec git"
	gtfu = "!echo GET THE FUCK UP"
	proj = "!proj"
	nyan = "!nyancat 2> /dev/null || echo gem install nyancat"
	# purge-merged = "git b -d `git b --merged | awk \"/^ / { print $1 }\" | xargs` || echo 'No branches to delete'\"
	# From http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	g = grep --break --heading --line-number
	# TODO: extract into separate tool / take argument for branch to diff against?
	show-missing-newlines-in-branch = "!git diff master | awk '/\\+\\+\\+/ { gsub(/w\\//, \"\", $2); last_filename = $2 }; /No newline at end of file/ { print last_filename }'"
	fix-missing-newlines-in-branch = "!for file in $(git show-missing-newlines-in-branch); do echo >> $file; done"
	sha = rev-parse HEAD
	u = up
	up = pull --rebase --autostash
	praise = blame
	stup = up
	stas = stash
	uip = up
	iup = up
	tpull-request = pull-request
	recent = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
	tpr = !git pr
	it = !git init && git commit -m "First!!!111oneone" --allow-empty && git branch -M main
	pre = pr
	upsh = push
	poush = push
	add-p = add -p
  # Pinched from https://github.com/speric/dotfiles/blob/master/gitconfig
	short-recent = "for-each-ref --count=25 --sort=-committerdate refs/heads/ --format='%(refname:short)'"
	stt = status -sb
	cleanup-branches = "!git branch-cleanup"
	base-branch = "!git rev-parse --symbolic-full-name refs/remotes/origin/HEAD | awk -F/ '{ print $4 }'"
	home = "!git checkout $(git base-branch)"
	# https://carolynvanslyck.com/blog/2020/12/git-wip/
	wip = for-each-ref --sort='authordate:iso8601' --format=' %(color:green)%(authordate:relative)%09%(color:white)%(refname:short)' refs/heads
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
    rlc = reset --hard HEAD~1                       # Remove last commit
    reup = rebase-update
    ulc = reset --soft HEAD~1                       # Undo last commit
    tags = tag -l
    root = rev-parse --show-toplevel

[core]
    excludesfile = ~/.gitignore
    attributesfile = ~/.gitattributes
	whitespace = fix,-indent-with-non-tab,trailing-space
	preloadindex = true

[advice]
    statusHints = true
    pushNonFastForward = false

[grep]
	extendRegexp = true
	lineNumber = true
[branch]
	autosetupmerge = true
	autosetuprebase = always
[diff "doc"]
    textconv = strings
[diff "exif"]
	textconv = exiftool
[diff]
    renamelimit = 0
    mnemonicprefix = true
    renames = copies
    algorithm = patience
    submodule = log
    compactionHeuristic = true
[diff "bin"]

    # Use `hexdump` to diff binary files
    textconv = hexdump -v -C
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[fsck]
	zeroPaddedFilemode = ignore
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    commit = green bold
    frag = magenta bold
    old = red bold
    new = green bold
    whitespace = red reverse
[color "status"]
    added = yellow
    changed = green
    untracked = red reverse
[color]
	branch = auto
	diff = auto
	status = auto
	ui = true
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = "red bold 52"
    newNormal = "green bold"
    newHighlight = "green bold 22"
[merge]
   # tool = opendiff
	tool = mergemate
	stat = true
	ff = false

[push]
    default = current

[url "git://gist.github.com/"]
	insteadOf = gist:
[url "git://github.com/"]
	insteadOf = github:
[url "git@github.com:"]
    insteadOf = "gh:"
    insteadOf = "git://github.com"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"
    pushInsteadOf = "https://github.com/"
[url "git@bitbucket.org:"]
	insteadOf = bb:
	pushInsteadOf = bitbucket:
	pushInsteadOf = git://bitbucket.org/
[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"
    pushInsteadOf = "https://gist.github.com/"

[url "git@gitlab.com:"]
	insteadOf = gl:
	pushInsteadOf = gitlab:
	pushInsteadOf = git://gitlab.com/

[help]
    autocorrect = 1

[filter "lfs"]
    clean = git-lfs clean %f
    smudge = git-lfs smudge %f
    required = true

[web]
    browser = google-chrome

[instaweb]
    httpd = apache2 -f

[rerere]
    enabled = 1
    autoupdate = 1

[http]
	sslverify = true
[hub]
	protocol = https
[submodule]
	fetchJobs = 4

